apply plugin: 'com.android.application'

android {
    compileSdkVersion 28

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        // This is important as it will run lint but not abort on error
        // Lint has some overly obnoxious "errors" that should really be warnings
        abortOnError false
    }

    defaultConfig {
        applicationId "org.citra.emu"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode(getBuildVersionCode())
        versionName "${getVersion()}"
    }

    signingConfigs {
        release {
            keyAlias 'dolphin-release-key'
            keyPassword 'zhangwei'
            storeFile file('D:/Android/android-sign-key/dolphin-release-key.jks')
            storePassword 'zhangwei'
        }
    }

    // Define build types, which are orthogonal to product flavors.
    buildTypes {
        // Signed by release key, allowing for upload to Play Store.
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        // Signed by debug key disallowing distribution on Play Store.
        // Attaches 'debug' suffix to version and package name, allowing installation alongside the release build.
        debug {
            // TODO If this is ever modified, change application_id in debug/strings.xml
            applicationIdSuffix ".debug"
            versionNameSuffix '-debug'
            jniDebuggable true
        }
    }

    externalNativeBuild {
        cmake {
            path "../../../CMakeLists.txt"
            version "3.10.2"
        }
    }

    defaultConfig {
        externalNativeBuild {
            cmake {
                arguments "-DENABLE_QT=0", // Don't use QT
                        "-DENABLE_SDL2=0", // Don't use SDL
                        "-DENABLE_WEB_SERVICE=0", // Don't use web services
                        "-DANDROID_ARM_NEON=true", // cryptopp requires Neon to work
                        "-DENABLE_CUBEB=1",
                        "-DANDROID_STL=c++_static",
                        "-DCMAKE_CXX_FLAGS_RELEASE=-Ofast"
                abiFilters "arm64-v8a"
            }
        }
    }
}

ext {
    androidSupportVersion = '27.1.0'
}

dependencies {
    implementation "com.android.support:support-v13:$androidSupportVersion"
    implementation "com.android.support:cardview-v7:$androidSupportVersion"
    implementation "com.android.support:recyclerview-v7:$androidSupportVersion"
    implementation "com.android.support:design:$androidSupportVersion"
}

def getVersion() {
    def versionNumber = '0.0'

    try {
        versionNumber = 'git describe --always --long'.execute([], project.rootDir).text
                .trim()
                .replaceAll(/(-0)?-[^-]+$/, "")
    } catch (Exception e) {
        logger.error('Cannot find git, defaulting to dummy version number')
    }

    return versionNumber
}


def getBuildVersionCode() {
    try {
        def versionNumber = 'git rev-list --first-parent --count HEAD'.execute([], project.rootDir).text
                .trim()
        return Integer.valueOf(versionNumber)
    } catch (Exception e) {
        logger.error('Cannot find git, defaulting to dummy version number')
    }

    return 0
}
